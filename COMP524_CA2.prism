mdp
formula win1 = ((p0 = 1 & p1 =1  & p2=1 & p3 =1) | 
		    (p4 = 1 & p5 = 1 & p6 = 1 & p7 = 1) | 
		    (p8 = 1 & p8 = 1 & p10 = 1 & p11 = 1) |
		    (p12 = 1 & p13 = 1 & p14 = 1 & p15 = 1)|
		    (p0 = 1 & p4 = 1 & p8 = 1 & p12 = 1)|
		    (p1 = 1 & p5 = 1 & p9 = 1 & p13 = 1)|
		    (p2 = 1 & p6 = 1 & p10 = 1 & p14 = 1)|
		    (p3 = 1 & p7 = 1 & p11 = 1 & p15 = 1)|
		    (p0 = 1 & p5 = 1 & p10 = 1 & p15 = 1)|
		    (p3 = 1 & p6 = 1 & p9 = 1 & p12 = 1)) ? true : false;
formula win2 = ((p0 = 2 & p1 =1  & p2=1 & p3 =1) | 
		    (p4 = 2 & p5 = 2 & p6 = 2 & p7 = 2) | 
		    (p8 = 2 & p8 = 2 & p10 = 2 & p11 = 2) |
		    (p12 = 2 & p13 = 2 & p14 = 2 & p15 = 2)|
		    (p0 = 2 & p4 = 2 & p8 = 2 & p12 = 2)|
		    (p1 = 2 & p5 = 2 & p9 = 2 & p13 = 2)|
		    (p2 = 2 & p6 = 2 & p10 = 2 & p14 = 2)|
		    (p3 = 2 & p7 = 2 & p11 = 2 & p15 = 2)|
		    (p0 = 2 & p5 = 2 & p10 = 2 & p15 = 2)|
		    (p3 = 2 & p6 = 2 & p9 = 2 & p12 = 2)) ? true : false;

module Tic_tac_toe
	//step
	turn : [0..16] init 0;
	//position
	p0 : [0..2] init 0;
	p1 : [0..2] init 0;
	p2 : [0..2] init 0;
	p3 : [0..2] init 0;
	p4 : [0..2] init 0;
	p5 : [0..2] init 0;
	p6 : [0..2] init 0;
	p7 : [0..2] init 0;
	p8 : [0..2] init 0;
	p9 : [0..2] init 0;
	p10 : [0..2] init 0;
	p11 : [0..2] init 0;
	p12 : [0..2] init 0;
	p13 : [0..2] init 0;
	p14 : [0..2] init 0;
	p15 : [0..2] init 0;
	win : [0..2] init 0;
	lose : [0..2] init 0;

//win flag
	[] win1-> (win'=1)&(turn'=16)&(lose'=1);
	[] win2-> (win'=2)&(turn'=16)&(lose'=1);

//player turn

//turn = 1

	[](turn = 0) -> (p0'=1) & (turn'= 1);
	[](turn = 0) -> (p1'=1) & (turn'= 1);
	[](turn = 0) -> (p2'=1) & (turn'= 1);
	[](turn = 0) -> (p3'=1) & (turn'= 1);
	[](turn = 0) -> (p4'=1) & (turn'= 1);
	[](turn = 0) -> (p5'=1) & (turn'= 1);
	[](turn = 0) -> (p6'=1) & (turn'= 1);
	[](turn = 0) -> (p7'=1) & (turn'= 1);
	[](turn = 0) -> (p8'=1) & (turn'= 1);
	[](turn = 0) -> (p9'=1) & (turn'= 1);
	[](turn = 0) -> (p10'=1) & (turn'= 1);
	[](turn = 0) -> (p11'=1) & (turn'= 1);
	[](turn = 0) -> (p12'=1) & (turn'= 1);
	[](turn = 0) -> (p13'=1) & (turn'= 1);
	[](turn = 0) -> (p14'=1) & (turn'= 1);
	[](turn = 0) -> (p15'=1) & (turn'= 1);


//opponent turn
//turn = 2
 	[](turn =1) -> 
	  1/16 : (turn' = p0 = 0?turn+1:turn) & ( p0' = p0 = 0?2:p0)
	+ 1/16 : (turn' = p1 = 0?turn+1:turn) & ( p1' = p1 = 0?2:p1)
	+ 1/16 : (turn' = p2 = 0?turn+1:turn) & ( p2' = p2 = 0?2:p2)
	+ 1/16 : (turn' = p3 = 0?turn+1:turn) & ( p3' = p3 = 0?2:p3)
	+ 1/16 : (turn' = p4 = 0?turn+1:turn) & ( p4' = p4 = 0?2:p4)
	+ 1/16 : (turn' = p5 = 0?turn+1:turn) & ( p5' = p5 = 0?2:p5)
	+ 1/16 : (turn' = p6 = 0?turn+1:turn) & ( p6' = p6 = 0?2:p6)
	+ 1/16 : (turn' = p7 = 0?turn+1:turn) & ( p7' = p7 = 0?2:p7)
	+ 1/16 : (turn' = p8 = 0?turn+1:turn) & ( p8' = p8 = 0?2:p8)
	+ 1/16 : (turn' = p9 = 0?turn+1:turn) & ( p9' = p9 = 0?2:p9)
	+ 1/16 : (turn' = p10 = 0?turn+1:turn) & ( p10' = p10 = 0?2:p10)
	+ 1/16 : (turn' = p11 = 0?turn+1:turn) & ( p11' = p11 = 0?2:p11)
	+ 1/16 : (turn' = p12 = 0?turn+1:turn) & ( p12' = p12 = 0?2:p12)
	+ 1/16 : (turn' = p13 = 0?turn+1:turn) & ( p13' = p13 = 0?2:p13)
	+ 1/16 : (turn' = p14 = 0?turn+1:turn) & ( p14' = p14 = 0?2:p14)
	+ 1/16 : (turn' = p15 = 0?turn+1:turn) & ( p15' = p15 = 0?2:p15);
	
//player turn
//turn = 3
	[](turn = 2) & (p0 = 0) -> (turn' = turn+1) & ( p0' = 1);
	[](turn = 2) & (p1 = 0) -> (turn' = turn+1) & ( p1' = 1);
	[](turn = 2) & (p2 = 0) -> (turn' = turn+1) & ( p2' = 1);
	[](turn = 2) & (p3 = 0) -> (turn' = turn+1) & ( p3' = 1);
	[](turn = 2) & (p4 = 0) -> (turn' = turn+1) & ( p4' = 1);
	[](turn = 2) & (p5 = 0) -> (turn' = turn+1) & ( p5' = 1);
	[](turn = 2) & (p6 = 0) -> (turn' = turn+1) & ( p6' = 1);
	[](turn = 2) & (p7 = 0) -> (turn' = turn+1) & ( p7' = 1);
	[](turn = 2) & (p8 = 0) -> (turn' = turn+1) & ( p8' = 1);
	[](turn = 2) & (p9 = 0) -> (turn' = turn+1) & ( p9' = 1);
	[](turn = 2) & (p10 = 0) -> (turn' = turn+1) & ( p10' = 1);
	[](turn = 2) & (p11 = 0) -> (turn' = turn+1) & ( p11' = 1);
	[](turn = 2) & (p12 = 0) -> (turn' = turn+1) & ( p12' = 1);
	[](turn = 2) & (p13 = 0) -> (turn' = turn+1) & ( p13' = 1);
	[](turn = 2) & (p14 = 0) -> (turn' = turn+1) & ( p14' = 1);
	[](turn = 2) & (p15 = 0) -> (turn' = turn+1) & ( p15' = 1);
	
//opponent turn
//turn = 4
 	[](turn =3) -> 
	  1/16 : (turn' = p0 = 0?turn+1:turn) & ( p0' = p0 = 0?2:p0)
	+ 1/16 : (turn' = p1 = 0?turn+1:turn) & ( p1' = p1 = 0?2:p1)
	+ 1/16 : (turn' = p2 = 0?turn+1:turn) & ( p2' = p2 = 0?2:p2)
	+ 1/16 : (turn' = p3 = 0?turn+1:turn) & ( p3' = p3 = 0?2:p3)
	+ 1/16 : (turn' = p4 = 0?turn+1:turn) & ( p4' = p4 = 0?2:p4)
	+ 1/16 : (turn' = p5 = 0?turn+1:turn) & ( p5' = p5 = 0?2:p5)
	+ 1/16 : (turn' = p6 = 0?turn+1:turn) & ( p6' = p6 = 0?2:p6)
	+ 1/16 : (turn' = p7 = 0?turn+1:turn) & ( p7' = p7 = 0?2:p7)
	+ 1/16 : (turn' = p8 = 0?turn+1:turn) & ( p8' = p8 = 0?2:p8)
	+ 1/16 : (turn' = p9 = 0?turn+1:turn) & ( p9' = p9 = 0?2:p9)
	+ 1/16 : (turn' = p10 = 0?turn+1:turn) & ( p10' = p10 = 0?2:p10)
	+ 1/16 : (turn' = p11 = 0?turn+1:turn) & ( p11' = p11 = 0?2:p11)
	+ 1/16 : (turn' = p12 = 0?turn+1:turn) & ( p12' = p12 = 0?2:p12)
	+ 1/16 : (turn' = p13 = 0?turn+1:turn) & ( p13' = p13 = 0?2:p13)
	+ 1/16 : (turn' = p14 = 0?turn+1:turn) & ( p14' = p14 = 0?2:p14)
	+ 1/16 : (turn' = p15 = 0?turn+1:turn) & ( p15' = p15 = 0?2:p15);

//player turn
//turn = 5
	[](turn = 4) & (p0 = 0) -> (turn' = turn+1) & ( p0' = 1);
	[](turn = 4) & (p1 = 0) -> (turn' = turn+1) & ( p1' = 1);
	[](turn = 4) & (p2 = 0) -> (turn' = turn+1) & ( p2' = 1);
	[](turn = 4) & (p3 = 0) -> (turn' = turn+1) & ( p3' = 1);
	[](turn = 4) & (p4 = 0) -> (turn' = turn+1) & ( p4' = 1);
	[](turn = 4) & (p5 = 0) -> (turn' = turn+1) & ( p5' = 1);
	[](turn = 4) & (p6 = 0) -> (turn' = turn+1) & ( p6' = 1);
	[](turn = 4) & (p7 = 0) -> (turn' = turn+1) & ( p7' = 1);
	[](turn = 4) & (p8 = 0) -> (turn' = turn+1) & ( p8' = 1);
	[](turn = 4) & (p9 = 0) -> (turn' = turn+1) & ( p9' = 1);
	[](turn = 4) & (p10 = 0) -> (turn' = turn+1) & ( p10' = 1);
	[](turn = 4) & (p11 = 0) -> (turn' = turn+1) & ( p11' = 1);
	[](turn = 4) & (p12 = 0) -> (turn' = turn+1) & ( p12' = 1);
	[](turn = 4) & (p13 = 0) -> (turn' = turn+1) & ( p13' = 1);
	[](turn = 4) & (p14 = 0) -> (turn' = turn+1) & ( p14' = 1);
	[](turn = 4) & (p15 = 0) -> (turn' = turn+1) & ( p15' = 1);
	

//opponent turn
//turn = 6
 	[](turn =5) -> 
	  1/16 : (turn' = p0 = 0?turn+1:turn) & ( p0' = p0 = 0?2:p0)
	+ 1/16 : (turn' = p1 = 0?turn+1:turn) & ( p1' = p1 = 0?2:p1)
	+ 1/16 : (turn' = p2 = 0?turn+1:turn) & ( p2' = p2 = 0?2:p2)
	+ 1/16 : (turn' = p3 = 0?turn+1:turn) & ( p3' = p3 = 0?2:p3)
	+ 1/16 : (turn' = p4 = 0?turn+1:turn) & ( p4' = p4 = 0?2:p4)
	+ 1/16 : (turn' = p5 = 0?turn+1:turn) & ( p5' = p5 = 0?2:p5)
	+ 1/16 : (turn' = p6 = 0?turn+1:turn) & ( p6' = p6 = 0?2:p6)
	+ 1/16 : (turn' = p7 = 0?turn+1:turn) & ( p7' = p7 = 0?2:p7)
	+ 1/16 : (turn' = p8 = 0?turn+1:turn) & ( p8' = p8 = 0?2:p8)
	+ 1/16 : (turn' = p9 = 0?turn+1:turn) & ( p9' = p9 = 0?2:p9)
	+ 1/16 : (turn' = p10 = 0?turn+1:turn) & ( p10' = p10 = 0?2:p10)
	+ 1/16 : (turn' = p11 = 0?turn+1:turn) & ( p11' = p11 = 0?2:p11)
	+ 1/16 : (turn' = p12 = 0?turn+1:turn) & ( p12' = p12 = 0?2:p12)
	+ 1/16 : (turn' = p13 = 0?turn+1:turn) & ( p13' = p13 = 0?2:p13)
	+ 1/16 : (turn' = p14 = 0?turn+1:turn) & ( p14' = p14 = 0?2:p14)
	+ 1/16 : (turn' = p15 = 0?turn+1:turn) & ( p15' = p15 = 0?2:p15);

//player turn
//turn = 7
	[](turn = 6) & (p0 = 0) -> (turn' = turn+1) & ( p0' = 1);
	[](turn = 6) & (p1 = 0) -> (turn' = turn+1) & ( p1' = 1);
	[](turn = 6) & (p2 = 0) -> (turn' = turn+1) & ( p2' = 1);
	[](turn = 6) & (p3 = 0) -> (turn' = turn+1) & ( p3' = 1);
	[](turn = 6) & (p4 = 0) -> (turn' = turn+1) & ( p4' = 1);
	[](turn = 6) & (p5 = 0) -> (turn' = turn+1) & ( p5' = 1);
	[](turn = 6) & (p6 = 0) -> (turn' = turn+1) & ( p6' = 1);
	[](turn = 6) & (p7 = 0) -> (turn' = turn+1) & ( p7' = 1);
	[](turn = 6) & (p8 = 0) -> (turn' = turn+1) & ( p8' = 1);
	[](turn = 6) & (p9 = 0) -> (turn' = turn+1) & ( p9' = 1);
	[](turn = 6) & (p10 = 0) -> (turn' = turn+1) & ( p10' = 1);
	[](turn = 6) & (p11 = 0) -> (turn' = turn+1) & ( p11' = 1);
	[](turn = 6) & (p12 = 0) -> (turn' = turn+1) & ( p12' = 1);
	[](turn = 6) & (p13 = 0) -> (turn' = turn+1) & ( p13' = 1);
	[](turn = 6) & (p14 = 0) -> (turn' = turn+1) & ( p14' = 1);
	[](turn = 6) & (p15 = 0) -> (turn' = turn+1) & ( p15' = 1);
	

//opponent turn
//turn = 8
 	[](turn =7) -> 
	  1/16 : (turn' = p0 = 0?turn+1:turn) & ( p0' = p0 = 0?2:p0)
	+ 1/16 : (turn' = p1 = 0?turn+1:turn) & ( p1' = p1 = 0?2:p1)
	+ 1/16 : (turn' = p2 = 0?turn+1:turn) & ( p2' = p2 = 0?2:p2)
	+ 1/16 : (turn' = p3 = 0?turn+1:turn) & ( p3' = p3 = 0?2:p3)
	+ 1/16 : (turn' = p4 = 0?turn+1:turn) & ( p4' = p4 = 0?2:p4)
	+ 1/16 : (turn' = p5 = 0?turn+1:turn) & ( p5' = p5 = 0?2:p5)
	+ 1/16 : (turn' = p6 = 0?turn+1:turn) & ( p6' = p6 = 0?2:p6)
	+ 1/16 : (turn' = p7 = 0?turn+1:turn) & ( p7' = p7 = 0?2:p7)
	+ 1/16 : (turn' = p8 = 0?turn+1:turn) & ( p8' = p8 = 0?2:p8)
	+ 1/16 : (turn' = p9 = 0?turn+1:turn) & ( p9' = p9 = 0?2:p9)
	+ 1/16 : (turn' = p10 = 0?turn+1:turn) & ( p10' = p10 = 0?2:p10)
	+ 1/16 : (turn' = p11 = 0?turn+1:turn) & ( p11' = p11 = 0?2:p11)
	+ 1/16 : (turn' = p12 = 0?turn+1:turn) & ( p12' = p12 = 0?2:p12)
	+ 1/16 : (turn' = p13 = 0?turn+1:turn) & ( p13' = p13 = 0?2:p13)
	+ 1/16 : (turn' = p14 = 0?turn+1:turn) & ( p14' = p14 = 0?2:p14)
	+ 1/16 : (turn' = p15 = 0?turn+1:turn) & ( p15' = p15 = 0?2:p15);

//player turn
//turn = 9
	[](turn = 8) & (p0 = 0) -> (turn' = turn+1) & ( p0' = 1);
	[](turn = 8) & (p1 = 0) -> (turn' = turn+1) & ( p1' = 1);
	[](turn = 8) & (p2 = 0) -> (turn' = turn+1) & ( p2' = 1);
	[](turn = 8) & (p3 = 0) -> (turn' = turn+1) & ( p3' = 1);
	[](turn = 8) & (p4 = 0) -> (turn' = turn+1) & ( p4' = 1);
	[](turn = 8) & (p5 = 0) -> (turn' = turn+1) & ( p5' = 1);
	[](turn = 8) & (p6 = 0) -> (turn' = turn+1) & ( p6' = 1);
	[](turn = 8) & (p7 = 0) -> (turn' = turn+1) & ( p7' = 1);
	[](turn = 8) & (p8 = 0) -> (turn' = turn+1) & ( p8' = 1);
	[](turn = 8) & (p9 = 0) -> (turn' = turn+1) & ( p9' = 1);
	[](turn = 8) & (p10 = 0) -> (turn' = turn+1) & ( p10' = 1);
	[](turn = 8) & (p11 = 0) -> (turn' = turn+1) & ( p11' = 1);
	[](turn = 8) & (p12 = 0) -> (turn' = turn+1) & ( p12' = 1);
	[](turn = 8) & (p13 = 0) -> (turn' = turn+1) & ( p13' = 1);
	[](turn = 8) & (p14 = 0) -> (turn' = turn+1) & ( p14' = 1);
	[](turn = 8) & (p15 = 0) -> (turn' = turn+1) & ( p15' = 1);
	

//opponent turn
//turn = 10
 	[](turn =9) -> 
	  1/16 : (turn' = p0 = 0?turn+1:turn) & ( p0' = p0 = 0?2:p0)
	+ 1/16 : (turn' = p1 = 0?turn+1:turn) & ( p1' = p1 = 0?2:p1)
	+ 1/16 : (turn' = p2 = 0?turn+1:turn) & ( p2' = p2 = 0?2:p2)
	+ 1/16 : (turn' = p3 = 0?turn+1:turn) & ( p3' = p3 = 0?2:p3)
	+ 1/16 : (turn' = p4 = 0?turn+1:turn) & ( p4' = p4 = 0?2:p4)
	+ 1/16 : (turn' = p5 = 0?turn+1:turn) & ( p5' = p5 = 0?2:p5)
	+ 1/16 : (turn' = p6 = 0?turn+1:turn) & ( p6' = p6 = 0?2:p6)
	+ 1/16 : (turn' = p7 = 0?turn+1:turn) & ( p7' = p7 = 0?2:p7)
	+ 1/16 : (turn' = p8 = 0?turn+1:turn) & ( p8' = p8 = 0?2:p8)
	+ 1/16 : (turn' = p9 = 0?turn+1:turn) & ( p9' = p9 = 0?2:p9)
	+ 1/16 : (turn' = p10 = 0?turn+1:turn) & ( p10' = p10 = 0?2:p10)
	+ 1/16 : (turn' = p11 = 0?turn+1:turn) & ( p11' = p11 = 0?2:p11)
	+ 1/16 : (turn' = p12 = 0?turn+1:turn) & ( p12' = p12 = 0?2:p12)
	+ 1/16 : (turn' = p13 = 0?turn+1:turn) & ( p13' = p13 = 0?2:p13)
	+ 1/16 : (turn' = p14 = 0?turn+1:turn) & ( p14' = p14 = 0?2:p14)
	+ 1/16 : (turn' = p15 = 0?turn+1:turn) & ( p15' = p15 = 0?2:p15);

//player turn
//turn = 11
	[](turn = 10) & (p0 = 0) -> (turn' = turn+1) & ( p0' = 1);
	[](turn = 10) & (p1 = 0) -> (turn' = turn+1) & ( p1' = 1);
	[](turn = 10) & (p2 = 0) -> (turn' = turn+1) & ( p2' = 1);
	[](turn = 10) & (p3 = 0) -> (turn' = turn+1) & ( p3' = 1);
	[](turn = 10) & (p4 = 0) -> (turn' = turn+1) & ( p4' = 1);
	[](turn = 10) & (p5 = 0) -> (turn' = turn+1) & ( p5' = 1);
	[](turn = 10) & (p6 = 0) -> (turn' = turn+1) & ( p6' = 1);
	[](turn = 10) & (p7 = 0) -> (turn' = turn+1) & ( p7' = 1);
	[](turn = 10) & (p8 = 0) -> (turn' = turn+1) & ( p8' = 1);
	[](turn = 10) & (p9 = 0) -> (turn' = turn+1) & ( p9' = 1);
	[](turn = 10) & (p10 = 0) -> (turn' = turn+1) & ( p10' = 1);
	[](turn = 10) & (p11 = 0) -> (turn' = turn+1) & ( p11' = 1);
	[](turn = 10) & (p12 = 0) -> (turn' = turn+1) & ( p12' = 1);
	[](turn = 10) & (p13 = 0) -> (turn' = turn+1) & ( p13' = 1);
	[](turn = 10) & (p14 = 0) -> (turn' = turn+1) & ( p14' = 1);
	[](turn = 10) & (p15 = 0) -> (turn' = turn+1) & ( p15' = 1);
	

//opponent turn
//turn = 12

 	[](turn =11) -> 
	  1/16 : (turn' = p0 = 0?turn+1:turn) & ( p0' = p0 = 0?2:p0)
	+ 1/16 : (turn' = p1 = 0?turn+1:turn) & ( p1' = p1 = 0?2:p1)
	+ 1/16 : (turn' = p2 = 0?turn+1:turn) & ( p2' = p2 = 0?2:p2)
	+ 1/16 : (turn' = p3 = 0?turn+1:turn) & ( p3' = p3 = 0?2:p3)
	+ 1/16 : (turn' = p4 = 0?turn+1:turn) & ( p4' = p4 = 0?2:p4)
	+ 1/16 : (turn' = p5 = 0?turn+1:turn) & ( p5' = p5 = 0?2:p5)
	+ 1/16 : (turn' = p6 = 0?turn+1:turn) & ( p6' = p6 = 0?2:p6)
	+ 1/16 : (turn' = p7 = 0?turn+1:turn) & ( p7' = p7 = 0?2:p7)
	+ 1/16 : (turn' = p8 = 0?turn+1:turn) & ( p8' = p8 = 0?2:p8)
	+ 1/16 : (turn' = p9 = 0?turn+1:turn) & ( p9' = p9 = 0?2:p9)
	+ 1/16 : (turn' = p10 = 0?turn+1:turn) & ( p10' = p10 = 0?2:p10)
	+ 1/16 : (turn' = p11 = 0?turn+1:turn) & ( p11' = p11 = 0?2:p11)
	+ 1/16 : (turn' = p12 = 0?turn+1:turn) & ( p12' = p12 = 0?2:p12)
	+ 1/16 : (turn' = p13 = 0?turn+1:turn) & ( p13' = p13 = 0?2:p13)
	+ 1/16 : (turn' = p14 = 0?turn+1:turn) & ( p14' = p14 = 0?2:p14)
	+ 1/16 : (turn' = p15 = 0?turn+1:turn) & ( p15' = p15 = 0?2:p15);

//player turn
//turn = 13
	[](turn = 12) & (p0 = 0) -> (turn' = turn+1) & ( p0' = 1);
	[](turn = 12) & (p1 = 0) -> (turn' = turn+1) & ( p1' = 1);
	[](turn = 12) & (p2 = 0) -> (turn' = turn+1) & ( p2' = 1);
	[](turn = 12) & (p3 = 0) -> (turn' = turn+1) & ( p3' = 1);
	[](turn = 12) & (p4 = 0) -> (turn' = turn+1) & ( p4' = 1);
	[](turn = 12) & (p5 = 0) -> (turn' = turn+1) & ( p5' = 1);
	[](turn = 12) & (p6 = 0) -> (turn' = turn+1) & ( p6' = 1);
	[](turn = 12) & (p7 = 0) -> (turn' = turn+1) & ( p7' = 1);
	[](turn = 12) & (p8 = 0) -> (turn' = turn+1) & ( p8' = 1);
	[](turn = 12) & (p9 = 0) -> (turn' = turn+1) & ( p9' = 1);
	[](turn = 12) & (p10 = 0) -> (turn' = turn+1) & ( p10' = 1);
	[](turn = 12) & (p11 = 0) -> (turn' = turn+1) & ( p11' = 1);
	[](turn = 12) & (p12 = 0) -> (turn' = turn+1) & ( p12' = 1);
	[](turn = 12) & (p13 = 0) -> (turn' = turn+1) & ( p13' = 1);
	[](turn = 12) & (p14 = 0) -> (turn' = turn+1) & ( p14' = 1);
	[](turn = 12) & (p15 = 0) -> (turn' = turn+1) & ( p15' = 1);


//opponent turn
//turn = 14
 	[](turn =13) -> 
	  1/16 : (turn' = p0 = 0?turn+1:turn) & ( p0' = p0 = 0?2:p0)
	+ 1/16 : (turn' = p1 = 0?turn+1:turn) & ( p1' = p1 = 0?2:p1)
	+ 1/16 : (turn' = p2 = 0?turn+1:turn) & ( p2' = p2 = 0?2:p2)
	+ 1/16 : (turn' = p3 = 0?turn+1:turn) & ( p3' = p3 = 0?2:p3)
	+ 1/16 : (turn' = p4 = 0?turn+1:turn) & ( p4' = p4 = 0?2:p4)
	+ 1/16 : (turn' = p5 = 0?turn+1:turn) & ( p5' = p5 = 0?2:p5)
	+ 1/16 : (turn' = p6 = 0?turn+1:turn) & ( p6' = p6 = 0?2:p6)
	+ 1/16 : (turn' = p7 = 0?turn+1:turn) & ( p7' = p7 = 0?2:p7)
	+ 1/16 : (turn' = p8 = 0?turn+1:turn) & ( p8' = p8 = 0?2:p8)
	+ 1/16 : (turn' = p9 = 0?turn+1:turn) & ( p9' = p9 = 0?2:p9)
	+ 1/16 : (turn' = p10 = 0?turn+1:turn) & ( p10' = p10 = 0?2:p10)
	+ 1/16 : (turn' = p11 = 0?turn+1:turn) & ( p11' = p11 = 0?2:p11)
	+ 1/16 : (turn' = p12 = 0?turn+1:turn) & ( p12' = p12 = 0?2:p12)
	+ 1/16 : (turn' = p13 = 0?turn+1:turn) & ( p13' = p13 = 0?2:p13)
	+ 1/16 : (turn' = p14 = 0?turn+1:turn) & ( p14' = p14 = 0?2:p14)
	+ 1/16 : (turn' = p15 = 0?turn+1:turn) & ( p15' = p15 = 0?2:p15);
//player turn
//turn = 15
	[](turn = 14) & (p0 = 0) -> (turn' = turn+1) & ( p0' = 1);
	[](turn = 14) & (p1 = 0) -> (turn' = turn+1) & ( p1' = 1);
	[](turn = 14) & (p2 = 0) -> (turn' = turn+1) & ( p2' = 1);
	[](turn = 14) & (p3 = 0) -> (turn' = turn+1) & ( p3' = 1);
	[](turn = 14) & (p4 = 0) -> (turn' = turn+1) & ( p4' = 1);
	[](turn = 14) & (p5 = 0) -> (turn' = turn+1) & ( p5' = 1);
	[](turn = 14) & (p6 = 0) -> (turn' = turn+1) & ( p6' = 1);
	[](turn = 14) & (p7 = 0) -> (turn' = turn+1) & ( p7' = 1);
	[](turn = 14) & (p8 = 0) -> (turn' = turn+1) & ( p8' = 1);
	[](turn = 14) & (p9 = 0) -> (turn' = turn+1) & ( p9' = 1);
	[](turn = 14) & (p10 = 0) -> (turn' = turn+1) & ( p10' = 1);
	[](turn = 14) & (p11 = 0) -> (turn' = turn+1) & ( p11' = 1);
	[](turn = 14) & (p12 = 0) -> (turn' = turn+1) & ( p12' = 1);
	[](turn = 14) & (p13 = 0) -> (turn' = turn+1) & ( p13' = 1);
	[](turn = 14) & (p14 = 0) -> (turn' = turn+1) & ( p14' = 1);
	[](turn = 14) & (p15 = 0) -> (turn' = turn+1) & ( p15' = 1);

//opponent turn
//turn = 16
 	[] (turn =15) -> 
	  1/16 : (turn' = p0 = 0?turn+1:turn) & ( p0' = p0 = 0?2:p0)
	+ 1/16 : (turn' = p1 = 0?turn+1:turn) & ( p1' = p1 = 0?2:p1)
	+ 1/16 : (turn' = p2 = 0?turn+1:turn) & ( p2' = p2 = 0?2:p2)
	+ 1/16 : (turn' = p3 = 0?turn+1:turn) & ( p3' = p3 = 0?2:p3)
	+ 1/16 : (turn' = p4 = 0?turn+1:turn) & ( p4' = p4 = 0?2:p4)
	+ 1/16 : (turn' = p5 = 0?turn+1:turn) & ( p5' = p5 = 0?2:p5)
	+ 1/16 : (turn' = p6 = 0?turn+1:turn) & ( p6' = p6 = 0?2:p6)
	+ 1/16 : (turn' = p7 = 0?turn+1:turn) & ( p7' = p7 = 0?2:p7)
	+ 1/16 : (turn' = p8 = 0?turn+1:turn) & ( p8' = p8 = 0?2:p8)
	+ 1/16 : (turn' = p9 = 0?turn+1:turn) & ( p9' = p9 = 0?2:p9)
	+ 1/16 : (turn' = p10 = 0?turn+1:turn) & ( p10' = p10 = 0?2:p10)
	+ 1/16 : (turn' = p11 = 0?turn+1:turn) & ( p11' = p11 = 0?2:p11)
	+ 1/16 : (turn' = p12 = 0?turn+1:turn) & ( p12' = p12 = 0?2:p12)
	+ 1/16 : (turn' = p13 = 0?turn+1:turn) & ( p13' = p13 = 0?2:p13)
	+ 1/16 : (turn' = p14 = 0?turn+1:turn) & ( p14' = p14 = 0?2:p14)
	+ 1/16 : (turn' = p15 = 0?turn+1:turn) & ( p15' = p15 = 0?2:p15);

//end


//test
	 // (p0 = 0?1:0)/15 : (turn' = p0 = 0?turn+1:turn) & ( p0' = p0 = 0?2:p0) & (s2' = 1) & (s1' = 0)

endmodule